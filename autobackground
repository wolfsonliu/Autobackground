#! /usr/bin/env python3
import argparse
import os
import datetime
import random
import xml.etree.ElementTree as ET

class AutoBackground():
    def __init__(self,
                 figpath,
                 transition=None,
                 randomtime=True,
                 duration=None):
        self.figpath = figpath
        self.starttime = datetime.datetime.now()
        self.xml = dict()
        self.xml['background'] = ET.Element('background')
        self.__xmlstarttime()
        self.duration = self.__duration(randomtime, duration)
        self.__xmlfigpath(transition)
        self.et = ET.ElementTree(self.xml['background'])

    def getet(self):
        # return the ElementTree
        return self.et

    def __duration(self, randomtime, duration):
        # generate duration time list
        if isinstance(duration, list):
            if len(duration) == len(self.figpath):
                 result = [str(x) for x in duration]
            else:
                for i in range(
                        len(self.figpath) // len(duration) + 1
                ):
                    duration += duration
                result = [
                    str(duration[i]) for i in range(len(self.figpath))
                ]
        elif isinstance(duration, float) or isinstance(duration, int):
            result = [
                str(duration) for i in range(len(self.figpath))
            ]
        elif randomtime:
            result = [
                str(random.randint(15 * 60, 120 * 60))
                for i in range(len(self.figpath))
            ]
        else:
            result = [
                str(round(86400 / len(self.figpath), 2))
                for i in range(len(self.figpath))
            ]
        return result

    def __xmlstarttime(self):
        self.xml['starttime'] = ET.SubElement(
            self.xml['background'], 'starttime'
        )
        for timename in [
                'year', 'month', 'day', 'hour', 'minute', 'second'
        ]:
            self.xml[
                '_'.join(['starttime', timename])
            ] = ET.SubElement(
                self.xml['starttime'], timename
            )
            self.xml[
                '_'.join(['starttime', timename])
            ].text = '{0:02}'.format(
                getattr(self.starttime, timename)
            )

    def __xmlfigpath(self, transition):
        if transition:
            print('under development')
            pass
        else:
            for i in range(len(self.figpath)):
                self.xml['_'.join(['fig', str(i)])] = ET.SubElement(
                    self.xml['background'], 'static'
                )
                ET.SubElement(
                    self.xml['_'.join(['fig', str(i)])], 'duration'
                ).text = self.duration[i]
                ET.SubElement(
                    self.xml['_'.join(['fig', str(i)])], 'file'
                ).text = self.figpath[i]


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='autobackground',
        description='Make auto change background of gnome desktop'
    )
    parser.add_argument(
        'figname',
        action='store',
        nargs='*',
        default=None,
        help='an integer for the accumulator'
    )
    parser.add_argument(
        '-d', '--figure-directory',
        action='store',
        default=os.getcwd(),
        help='The directory to store all the background figures.'
    )
    parser.add_argument(
        '-o', '--output',
        action='store',
        default='bg.xml',
        help='The output xml file name.'
    )
    parser.add_argument(
        '-wd', '--working-directory',
        action='store',
        default=os.getcwd(),
        help='The working directory, where is the default place to save xml file.'
    )
    parser.add_argument(
        '-t', '--duration-time',
        nargs='*',
        action='store',
        default=None,
        help='Duration time for each background.'
    )
    parser.add_argument(
        '-r', '--random-time',
        action='store_true',
        default=False,
        help='Set duration time to random time.'
    )
    parser.add_argument(
        '-x', '--transition',
        action='store',
        default=None,
        choices=['overlay'],
        help='Set duration time to random time.'
    )

    args = parser.parse_args()

    figdir = os.path.abspath(args.figure_directory)
    if not args.figname:
        figname = os.listdir(figdir)
    else:
        figname = args.figname

    if not os.path.dirname(figname[0]):
        figname = [
            os.path.join(figdir, x)
            for x in figname
        ]
    else:
        figname = [os.path.abspath(x) for x in figname]

    if not os.path.dirname(args.output):
        outfile = os.path.join(args.working_directory, args.output)
    else:
        outfile = os.path.abspath(args.output)

    bg = AutoBackground(
        figpath=figname,
        transition=args.transition,
        randomtime=args.random_time,
        duration=args.duration_time
    )

    et = bg.getet()
    et.write(outfile)
    print('Output xml file: ' + outfile)
else:
    pass
